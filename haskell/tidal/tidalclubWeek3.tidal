-- use of legato (w/ pattern)
d2
    $ slow 8
    $ off 0.25 (|+ 3)
    $ note (scale "minor" "0 7 -1 3 5")
    # s "juno_wobble"
    # n (irand 16)
    + legato "0.7 <3 0.7 1.5> 4"
    # gain 0.7

once $ slice 8 (slow 2 "0*5 1*7 [2*4 3*8] ~ 4*7 1*16 6*8 7*37") $ s "break:4"

-- use of striateBy
-- grainNo specifies no. of grains
let grainNo = (+1) (irand 32)
    pitchVar = "<4 -3 7>" in
    d1
        $ whenmod 7 4 (|+ note pitchVar)
        $ juxBy 0.3 (slow $ irand 8)
        $ loopAt (range 4 8 $ irand 2)
        $ striateBy grainNo ((1/) (irand 16))
        $ s "<quantum_voc*2, quantum_bass>"
        # n (irand 2)
        # pan (segment grainNo $ rand)

-- use of fmap to apply normal functions to Pattern type
:t (fmap round (segment 8 $ sine))

d2
  $ every (irand 3) (degradeBy rand)
  $ slow ((irand 4)+1)
  $ loopAt ((irand 5) +1)
  $ striate (irand 64)
  -- $ slice 16 "0 1 5 4 8 6 1 0"
  $ s "break:10"
  # room 0.5
  # cut 1
  # att rand
  # hold rand
  # rel rand
