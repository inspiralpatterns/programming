

putStrLn . show $ 1 + 1

squeeze x = if x > 10
    then compress (0, 0.5)
    else compress (0, 1)


let x compRatio p = compress (0, compRatio) $ p

let y randAmount = (irand randAmount) / 10

d1
    $ x 0.5
    $ sound "damage_bd*4"

let gtfo = gain 0


do
    let pat = "1(<3 5 7>, 4)"
    d1 $ gain pat # s "bd"

d1
    $ arpeggiate
    $ stutWith 6 (1/32) ((# gain 0.5) . (# delay 0.4). (# crush 4))
    $ s "supergong" # n "c'min" # gain 0.8

d2
    -- $ fix ((# loop 7) . (# coarse 12)) (s "high:0")
    $ n "high*4" # orbit 1

d3
    $ slow 16
    $ striate' 16 (1/32)
    $ hurry 4
    $ arpeggiate
    $ s "moog" +| n "0'min" |>| delay 0.5
    # cut 1
    # gain 0.7
    # hresonance 5000

d1
    $ jux (rev . (# crush 8) . (# gain 0.7))
    $ slow 4
    $ n (
        scale "scriabin"
        $ off "0.25" (+"<1 2>") "0 1 2"
    )
    # s "piano_f"
    # cut 1
    # speed "-1 -0.5 1"
    # delayfeedback 0.5
    # delaytime 0.5
    # delay 0.4
    # pan (slow 2 $ sine)


d2
    $ slow 4
    $ degradeBy 0.2
    $ striate' 32 (1/8)
    $ n (
        scale "scriabin"
        $ "0 3"
    )
    <| sound "piano_c ! piano_f:2/3 @2"
    # speed "-1"


d3 $ slow 4 $ sound "cymbow!4" # gain (slow 4 $ range 0 0.5 $ sine)